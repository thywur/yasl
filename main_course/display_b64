#!yasl_linux

{
	= "/" == ? 1 : (
		= "+" == ? 1 : (
			= "0" < ? 0 : (
				= "9" <= ? 1 : (
					= "A" < ? 0 : (
						= "Z" <= ? 1 : (
							= "a" < ? 0 : (
								= "z" <= ? 1 : (0))))))))
}	is_b64 //Add 1 to stack 0 if top of stack 0 is a b64 char, 0 if it is not

// Check that the program did not receive any argument

1
!=
? ("No argument required\n" print 1 exit)

#
#(!)

// Read on the standard input and explode string to stack 1

read
@(
	][:1 1:!
	1:#
	#(
		1:=:2
		2:=
		is_b64
		0 == ? ("Error: " print print " is not a b64 character" print "\n" print 1 exit)
		1:!
	)
    read
)

2:#
0 == ? ("Error: Empty image\n" print exit 1)

// Check wether the amount of character read in a multiple of 4

2:#
4
%
0 != ? ("Error: Uncomplete pixel\n" print 1 exit)

// Divide the amount of character read by 4 to get the number of pixels

2:#
4
/
=
"Image received, nb pixels : " print print "\n" print

{
	=:2
	1:3
	@(
		3:=:0
		= *
		= 2:=:0 == ? (3:=:4 0) : (1:3 3:+:3) 	//result saved in stack 4
	)
}	sqrt // Function to get the square root

sqrt
4:# 1 != ? ("Error: Image is not a square\n" print 1 exit)

4:=
"Found square : " print print "\n" print


// 4:=
// #(
// 	4:=
// 	#(
// 		=
// 		0
// 		]#[:4
// 		18:4
// 		4:<<:4
// 		=
// 		1
// 		]#[:4
// 		12:4
// 		4:<<:4
// 		4:|:4
// 		=
// 		2
// 		]#[:4
// 		6:4
// 		4:<<:4
// 		4:|:4
// 		=
// 		3
// 		]#[:4
// 		4:<<:4
// 		4:|:4
// 		"\e[48;2;125;0;0m  \e[0m" print
// 	)
// 	"\n" print
// )

